<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ðŸ“Š Object Oriented Programming | Courses</title><link>https://jdposada.github.io/courses/course/oop/</link><atom:link href="https://jdposada.github.io/courses/course/oop/index.xml" rel="self" type="application/rss+xml"/><description>ðŸ“Š Object Oriented Programming</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2022 Jose D. Posada</copyright><lastBuildDate>Sun, 24 Jan 2021 00:00:00 +0000</lastBuildDate><image><url>https://jdposada.github.io/courses/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url><title>ðŸ“Š Object Oriented Programming</title><link>https://jdposada.github.io/courses/course/oop/</link></image><item><title>Week 1</title><link>https://jdposada.github.io/courses/course/oop/week1/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week1/</guid><description>&lt;p>Introduction to OOP&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 4 Hours&lt;/p>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ul>
&lt;li>Open a &lt;a href="www.github.com">Github&lt;/a> Account with your university email. If you already have one please add the university email.&lt;/li>
&lt;li>Request the &lt;a href="https://education.github.com/pack" target="_blank" rel="noopener">Github Student Developer Pack&lt;/a>&lt;/li>
&lt;li>Clone our course Github &lt;a href="https://github.com/jdposada/oop_202201" target="_blank" rel="noopener">Repository&lt;/a> and follow the instructions there&lt;/li>
&lt;/ul>
&lt;h3 id="optional">Optional&lt;/h3>
&lt;p>It is better if you use Linux OS instead of Windows OS during this course. If you know how to do it attempt to have both installed on your computer. You could also boot linux from a USB or CD following &lt;a href="https://ubuntu.com/tutorials/try-ubuntu-before-you-install#1-getting-started" target="_blank" rel="noopener">this instructions&lt;/a>&lt;/p>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;h3 id="below-a-video-with-some-basics-about-command-line">Below a video with some basics about command line.&lt;/h3>
&lt;p>Here some command lines software that runs on your browser. No install needed&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://webvm.io/" target="_blank" rel="noopener">https://webvm.io/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Below some short tutorial that you may find useful. And you have a no-install terminal to try it!&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/cBokz0LTizk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h3 id="here-it-is-a-longer-one-if-you-want-more-info-it-even-has-more-visits">Here it is a longer one if you want more info. It even has more visits!&lt;/h3>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/ZtqBQ68cfJc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h3 id="a-cheat-sheet-for-command-linehttpsdocsgooglecomdocumentd195dwljkkkw1dmplrs46ducw4pp9kjoqnn-yas3sqkluedit">&lt;a href="https://docs.google.com/document/d/195DWljKKKw1dmplrS46DucW4pP9KjoqnN-Yas3sQkLU/edit" target="_blank" rel="noopener">A cheat sheet for command line&lt;/a>&lt;/h3>
&lt;h2 id="quiz">Quiz&lt;/h2>
&lt;p>Here is a very nice webpage to test your knowledge with simple questions&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cmdchallenge.com/" target="_blank" rel="noopener">https://cmdchallenge.com/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Week 2</title><link>https://jdposada.github.io/courses/course/oop/week2/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week2/</guid><description>&lt;p>Classes and Objects&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 4 - 6 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Here the &lt;a href="https://docs.google.com/presentation/d/1hl9qgP9s2F58Rb9-UZ2FQHpochYiCgkSDXTswhQLB14/edit?usp=sharing" target="_blank" rel="noopener">link&lt;/a> for the slides we used in class&lt;/li>
&lt;/ul>
&lt;h2 id="assignment">Assignment&lt;/h2>
&lt;ul>
&lt;li>This week your main assignment will be to follow the instructions in this &lt;a href="https://github.com/jdposada/oop_202201#remote-development-environment-on-cloud" target="_blank" rel="noopener">section&lt;/a> of our Github Repo.&lt;/li>
&lt;li>You should also check the tutorial below and get some Python knowledge&lt;/li>
&lt;/ul>
&lt;h3 id="optional">Optional&lt;/h3>
&lt;p>Below some resources to improve your teamwork&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/hHIikHJV9fI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/fRj7Am63wVc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="basic-intro-to-python">Basic Intro to Python&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/kqtD5dpn9C8" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="quiz">Quiz&lt;/h2>
&lt;details class="spoiler " id="spoiler-4">
&lt;summary>What are the key features of Python?&lt;/summary>
&lt;p>&lt;ul>
&lt;li>Python is an interpreted language&lt;/li>
&lt;li>Python is dynamically typed&lt;/li>
&lt;/ul>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-5">
&lt;summary>Are Python Lists Mutable?&lt;/summary>
&lt;p>&lt;ul>
&lt;li>Yes&lt;/li>
&lt;/ul>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-6">
&lt;summary>Are Python Tuples Mutable?&lt;/summary>
&lt;p>&lt;ul>
&lt;li>No&lt;/li>
&lt;/ul>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-7">
&lt;summary>If I have this list &lt;code>a = [2, 4, 8, 10, 3, 2]&lt;/code> and write this slice &lt;code>a[1:3]&lt;/code> &lt;em>what is the result?&lt;/em>&lt;/summary>
&lt;p>&lt;ul>
&lt;li>[4, 8]&lt;/li>
&lt;/ul>
&lt;/p>
&lt;/details>
&lt;p>Questions taken and modified from &lt;a href="https://www.edureka.co/blog/interview-questions/python-interview-questions/#WhatarethekeyfeaturesofPython?" target="_blank" rel="noopener">here&lt;/a>&lt;/p></description></item><item><title>Week 3</title><link>https://jdposada.github.io/courses/course/oop/week3/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week3/</guid><description>&lt;p>Relationships between classes and Encapsulation&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Encapsulation and composition class slides &lt;a href="https://docs.google.com/presentation/d/1EHxluyrsUO5fgy0kgzoxXbIliamj5RV7Il009loAfSI/edit?usp=sharing" target="_blank" rel="noopener">here&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>Read the &lt;a href="https://plantuml.com/class-diagram" target="_blank" rel="noopener">Plant UML language specification&lt;/a> for a Class Diagram&lt;/li>
&lt;li>Run the Plant UML code generated in our last class but inside VS code. Instructions in how to do that can be found &lt;a href="https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml" target="_blank" rel="noopener">here&lt;/a>&lt;/li>
&lt;li>Search on the web for a real case us of UML to specify a class diagram for a Python application. It does not need to be complicated and it is ok if you do not understand everything that is going on.&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;p>Few videos with nice short tutorials to create Class Diagrams with Plant UML. The last one is using Lucid Chart but it is a nice video for UML for class diagrams&lt;/p>
&lt;h2 id="hahahugoshortcode-s1-hbhb">
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/46m3_03uzfw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/h2>
&lt;h2 id="hahahugoshortcode-s2-hbhb">
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/Dd0bJlHDwLY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/UI6lqHOVHic" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Week 4</title><link>https://jdposada.github.io/courses/course/oop/week4/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week4/</guid><description>&lt;p>Python Refresher and Basic Inheritance&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 1 - 2 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Slides&lt;/strong>
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1eWx7L2RfxmfWL7xL9umvxCgU855xy5bcnBRRm33f8kI/edit?usp=sharing" target="_blank" rel="noopener">Case Study: Iris Dataset Classification Problem&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1216uL3GXLOr7Lo2zRN93AznPA5pIQ6-a72ZlICYZFQ0/edit?usp=sharing" target="_blank" rel="noopener">Basic Inheritance&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>Run inside the dev container and/or the virtual machine on Azure within VS Code
&lt;ul>
&lt;li>&lt;a href="https://github.com/jdposada/oop_202201/blob/main/src/ch_01/concept_image.py" target="_blank" rel="noopener">concept_image.py&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jdposada/oop_202201/blob/main/src/ch_01/distance_images.py" target="_blank" rel="noopener">distance_images.py&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Bring an idea for the project you want to work on. We will discuss your idea during regular class time on Thursday&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;p>Here a &lt;a href="https://code.visualstudio.com/docs/python/jupyter-support-py#_jupyter-code-cells" target="_blank" rel="noopener">link&lt;/a> with a description about the Jupyter cells that we are using in the code you need to run as assignment this week. Is a slightly different way to run a jupyter notebook using an interactive window.&lt;/p>
&lt;p>Below a short video that have a brief explanation about this feature in VS code&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/lwN4-W1WR84" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Week 5</title><link>https://jdposada.github.io/courses/course/oop/week5/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week5/</guid><description>&lt;p>Objects in Python - Basic Inheritance and Polymorphism&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Basic inheritance and polymorphism
&lt;ul>
&lt;li>Class activity: Present the concepts to your classmates in groups. Then one of the members of the group present the concept to the entire course. This activity encourages self-learning and concept reinforcement by teaching what was learned.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Objects in Python: The code is now in our &lt;a href="https://github.com/jdposada/oop_202201/" target="_blank" rel="noopener">repo&lt;/a> on &lt;code>oop_202201/chapters/ch_02/src/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Read&lt;/strong>:
&lt;ul>
&lt;li>Read pages 21 to 34 of the Book &lt;em>Python Object-Oriented Programming: Build robust and maintainable object-oriented Python applications and libraries&lt;/em>. Remember that this is our textbook and we will be using it extensively during our semester.&lt;/li>
&lt;li>Read about MRO: Method Resolution Order in Python&lt;/li>
&lt;li>Read about polymorphism and its specifics within Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Write&lt;/strong>:
&lt;ul>
&lt;li>Write a short project description. The description should be about 500 words. The description should be in &lt;em>&lt;strong>English&lt;/strong>&lt;/em>.
&lt;ul>
&lt;li>Google form &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfypQ-5TnQ0VEVAnXY6vrJ-fmsOjsQnIRUImDzA69MwonEAZw/viewform?usp=sf_link" target="_blank" rel="noopener">link&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note&lt;/strong>
It is important you remember that is is ok if you do not understand everything you are assigned to read. The important part is that you actually read. Please bring the questions you may have regarding the material to our class.&lt;/p>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;ul>
&lt;li>Short blog posts explaining:
&lt;ul>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/method-resolution-order-in-python-inheritance/" target="_blank" rel="noopener">MRO&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/polymorphism-in-python/" target="_blank" rel="noopener">Polymorphism&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Nice intro &lt;a href="https://www.codecademy.com/learn/learn-python-3" target="_blank" rel="noopener">Python course&lt;/a> if you still need some help to acquaint yourselves with it&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>NOTE&lt;/strong>: Sorry no videos this week on the learn section&lt;/p></description></item><item><title>Week 6</title><link>https://jdposada.github.io/courses/course/oop/week6/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week6/</guid><description>&lt;p>Objects in Python&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Review of classes implementation in Python&lt;/li>
&lt;/ul>
&lt;h3 id="in-class-activity">In-class activity&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Co-evaluation form of project abstracts&lt;/strong>. Please fill the form in this &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfP9EewlqJc2VNvl8c-650TnONiOA5CBck_XwsY3moOzq5m0w/viewform?usp=sf_link" target="_blank" rel="noopener">link&lt;/a>. You will see all the proposals from your classmates even in the other course section.&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>Read about &lt;a href="https://www.geeksforgeeks.org/python-super/" target="_blank" rel="noopener">super&lt;/a> in Python&lt;/li>
&lt;li>Read &lt;a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">PEP 8&lt;/a> Style Guide for Python Code. I expect you to finish this reading on week 7.&lt;/li>
&lt;li>Create 3 or more simple classes with Python MRO is needed. Then use a wrapper to solve the issue.&lt;/li>
&lt;li>Watch the two videos below. Those videos will help you understand the difference between functional and non-functional requirements.&lt;/li>
&lt;li>Solutions to your final project: You need to find and summarize the following in maximum 2 pages
&lt;ul>
&lt;li>Functional and non-functional requirements.&lt;/li>
&lt;li>Similar solutions in the literature and the market&lt;/li>
&lt;li>List of possible solutions to the problem *type of application, type of interaction, etc&amp;hellip;)&lt;/li>
&lt;li>Available technologies for the implementation of solutions&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Please create a Google Doc and share the link on &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdv7ERLbLa88R0GPMie7YQhRSZuYrkNNZRjQOaWkNR0iD29ng/viewform?usp=sf_link" target="_blank" rel="noopener">this form&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;ul>
&lt;li>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/3fgfUHKITts" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/li>
&lt;li>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/PtJmjPkrSUE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/li>
&lt;/ul></description></item><item><title>Week 7</title><link>https://jdposada.github.io/courses/course/oop/week7/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week7/</guid><description>&lt;p>Review of implementation of clases in Python - Functional and non-functional requirements&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Practical Class:
&lt;ul>
&lt;li>Conference on Auditorium: You should go to the auditorium and attend the event described on the flyer below. While in the event please use the hashtag #colist2022 to disseminate the event on your social networks. You should post about at least two conferences. After doing so, please post the link with the public post in &lt;a href="https://forms.gle/e4xLRDNen1Ad9FAV7" target="_blank" rel="noopener">this Google Form&lt;/a> for bonus points on your first partial exam.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="" srcset="
/courses/media/20220316_acofi_uninorte_huc79e00f72a941b0be0baabf3377f3134_145621_3f841b9df2d78bf6e9182b501ac8d2ee.jpg 400w,
/courses/media/20220316_acofi_uninorte_huc79e00f72a941b0be0baabf3377f3134_145621_e797b68c7449e6743808659109ac5d03.jpg 760w,
/courses/media/20220316_acofi_uninorte_huc79e00f72a941b0be0baabf3377f3134_145621_1200x1200_fit_q75_lanczos.jpg 1200w"
src="https://jdposada.github.io/courses/courses/media/20220316_acofi_uninorte_huc79e00f72a941b0be0baabf3377f3134_145621_3f841b9df2d78bf6e9182b501ac8d2ee.jpg"
width="428"
height="760"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;ul>
&lt;li>Theoretical Class: We will review the implementation of classes in Python and type hints. We will also review functional and non-functional requirements.&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>You need to finish your two page document assignment from prior week.&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;p>Below a nice video about type hints in Python&lt;/p>
&lt;ul>
&lt;li>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/6KidYEtspNc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/li>
&lt;/ul></description></item><item><title>Week 8</title><link>https://jdposada.github.io/courses/course/oop/week8/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week8/</guid><description>&lt;p>Abstract Base Classes - Modules and Packages in Python&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 3 - 4 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Practical Class:
&lt;ul>
&lt;li>&lt;a href="https://docs.python.org/3.9/tutorial/modules.html" target="_blank" rel="noopener">Modules and Packages in Python&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Theoretical Class:
&lt;ul>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/abstract-classes-in-python/" target="_blank" rel="noopener">Abstract Base Classes&lt;/a> and &lt;a href="https://www.geeksforgeeks.org/operator-overloading-in-python/" target="_blank" rel="noopener">Operator Overloading&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/presentation/d/1ZOGgrCkPgzLMNXJuzotIJjFbA4rYmhs0LJZV0Wy4JLU/edit?usp=sharing" target="_blank" rel="noopener">Class slides&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="in-class-activity">In-class Activity&lt;/h3>
&lt;ul>
&lt;li>Read the code inside our &lt;a href="https://github.com/jdposada/oop_202201" target="_blank" rel="noopener">repo&lt;/a> in the path &lt;code>oop_202201/chapters/ch_06/src/model.py&lt;/code> and present your understanding of the code during class&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>Watch the videos with lessons about exception management, properties and decorators in Python&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Exception management in Python&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/nlCKrKGHSSk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Properties and Decorators in Python&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/jCzT9XFZ5bw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Week 9</title><link>https://jdposada.github.io/courses/course/oop/week9/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week9/</guid><description>&lt;p>Abstract Base classes&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Practical Class:
&lt;ul>
&lt;li>We will cover the specifics of the coding of abstract base classes and test some code&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Theoretical Class:
&lt;ul>
&lt;li>We will continue our deep dive on abstract base classes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="in-class-activity">In-class Activity&lt;/h3>
&lt;ul>
&lt;li>Follow up the code from our repo&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>Next Thursday April 7th we will have a session to present the projects.&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Python OOP Tutorial&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>This video is mostly a refresher of concepts we have covered in class&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/_uYorV9ebLg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Week 10</title><link>https://jdposada.github.io/courses/course/oop/week10/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week10/</guid><description>&lt;p>First Partial and Exam and Preliminary Project Presentation&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Practical Class:
&lt;ul>
&lt;li>We will cover the specifics of the coding of abstract base classes and test some code&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Theoretical Class:
&lt;ul>
&lt;li>We will continue our deep dive on abstract base classes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="in-class-activity">In-class Activity&lt;/h3>
&lt;ul>
&lt;li>Project presentation
&lt;ul>
&lt;li>You will need to present your project in 3 minutes.&lt;/li>
&lt;li>While your classmates present their projects you will need to evaluate them using the following forms
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfac7T-I4U-gAzLByNQGLquUvJdx7hmV8GQoZClHpDO5ZooVQ/viewform?usp=sf_link" target="_blank" rel="noopener">2110-01&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSe6BOhoEBkDf3Lj5JIeBTRnrDuSG89wia6jjpzZW2xGlCDMKQ/viewform?usp=sf_link" target="_blank" rel="noopener">2110-02&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;ul>
&lt;li>Next Thursday April 7th we will have a session to present the projects.&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Python OOP Tutorial&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>This video is mostly a refresher of concepts we have covered in class&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/_uYorV9ebLg" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Week 12</title><link>https://jdposada.github.io/courses/course/oop/week12/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week12/</guid><description>&lt;p>Final Projects In-Class Work&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 2 - 3 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Final Projects&lt;/li>
&lt;/ul>
&lt;h3 id="in-class-activity">In-class Activity&lt;/h3>
&lt;ul>
&lt;li>Wednesday Class:
&lt;ul>
&lt;li>Final project programming. &lt;strong>All mandatory 5 tasks below should be done by Wednesday 10:30 AM or 4:30 PM depending on your usual class time.&lt;/strong>
&lt;ol>
&lt;li>Create a public Github Repository for your project and initialize it with a README.md. If you are not sure on how to do that watch &lt;a href="https://www.youtube.com/watch?v=iv8rSLsi1xo" target="_blank" rel="noopener">this Youtube video&lt;/a>.&lt;/li>
&lt;li>Implement in Python the skeleton of all classes proposed on your UML&lt;/li>
&lt;li>Implement in Python one functional requirement. If the functional requirement is too big, break it down into small tasks. Then select one of those tasks that should be achievable in the 2 hour class time.&lt;/li>
&lt;li>Push the changes to your public Github Repository&lt;/li>
&lt;li>Fill &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSdwYCKeS7jZX8bQyua4oU_m7exgWc36I2YJ0Kl3E77Ru0RFzg/viewform?usp=sf_link" target="_blank" rel="noopener">this Google Form&lt;/a> so your classmates know your repo&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Optional: Peek at least one repo for your classmates before Thursday class. The repos will be in &lt;a href="https://docs.google.com/spreadsheets/d/12-bmVhjfaQKf-HEuE0VAa1rmO453ledL8TEK9K5Z5Gk/edit?usp=sharing" target="_blank" rel="noopener">this Google Spreadsheet&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Thursday Class
&lt;ul>
&lt;li>You will present the implementation of one basic functional requirement of your project in 3 minutes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="assignments">Assignments&lt;/h2>
&lt;p>The assignments below should be done by Wednesday April 27th by our class time.&lt;/p>
&lt;ul>
&lt;li>Watch the video about how to give meaningful feedback&lt;/li>
&lt;li>Review the feedback your classmates gave to your presentation. Use it to improve.
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/spreadsheets/d/1bCuPKa4b9wHmyTkgECWfjqBCp2bzyJ3zohchZnZIdkU/edit?usp=sharing" target="_blank" rel="noopener">2110-01&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/spreadsheets/d/1_4iK38bSGxO9AyyH5DbWDgmX6GEpFxuzuqkOvXh_pnY/edit?usp=sharing" target="_blank" rel="noopener">2110-02&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Read chapter 8 of TextBook
&lt;ul>
&lt;li>&lt;em>The intersection between Object Oriented Programming and Functional Programming&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;p>How to give good and meaningful Feedback&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/wtl5UrrgU8c" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;h2 id="brief-quiz">Brief Quiz&lt;/h2>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>What are two &lt;em>Blur&lt;/em> words that we should avoid when giving feedback?&lt;/summary>
&lt;p>&lt;ul>
&lt;li>&lt;em>You could be more proactive&lt;/em>&lt;/li>
&lt;li>&lt;em>You should not be so defensive&lt;/em>&lt;/li>
&lt;/ul>
&lt;/p>
&lt;/details></description></item><item><title>Week 16</title><link>https://jdposada.github.io/courses/course/oop/week16/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://jdposada.github.io/courses/course/oop/week16/</guid><description>&lt;p>Object Oriented Design Patterns in Python&lt;/p>
&lt;p>
&lt;i class="fas fa-clock pr-1 fa-fw">&lt;/i> 3 - 4 Hours&lt;/p>
&lt;h2 id="class-content">Class content&lt;/h2>
&lt;ul>
&lt;li>Design patterns
&lt;ul>
&lt;li>Slides for the video below &lt;a href="https://speakerdeck.com/pycon2019/ariel-ortiz-tutorial-design-patterns-in-python-for-the-untrained-eye" target="_blank" rel="noopener">here&lt;/a>&lt;/li>
&lt;li>Slides used in class will be posted here&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="learn">Learn&lt;/h2>
&lt;p>This time there is a long video that contains valuable information about the design patterns. Below are the links to the moments the video covers the given topics.&lt;/p>
&lt;h3 id="introduction-to-design-patterns">Introduction to Design Patterns&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=16s" target="_blank" rel="noopener">0:16&lt;/a> Link to material&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=50s" target="_blank" rel="noopener">0:50&lt;/a> About the speaker&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=116s" target="_blank" rel="noopener">1:56&lt;/a> What is a Pattern?:&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=216s" target="_blank" rel="noopener">3:36&lt;/a> Pattern Categories by Abstraction Level&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=415s" target="_blank" rel="noopener">6:55&lt;/a> Some common Python Idioms:&lt;/li>
&lt;/ul>
&lt;h3 id="design-patterns-principles">Design Patterns Principles&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=946s" target="_blank" rel="noopener">15:46&lt;/a> Relevance of Design Patterns&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=1423s" target="_blank" rel="noopener">23:43&lt;/a> A Brief History (GoF)&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=1517s" target="_blank" rel="noopener">25:17&lt;/a> Use-based Classification of Design Patterns&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=1624s" target="_blank" rel="noopener">27:04&lt;/a> Design Principles&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=2151s" target="_blank" rel="noopener">35:51&lt;/a> Anatomy of a Design Pattern&lt;/li>
&lt;/ul>
&lt;h3 id="design-patterns-in-python">Design Patterns in Python&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=2257s" target="_blank" rel="noopener">37:37&lt;/a> Singleton&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=3594s" target="_blank" rel="noopener">59:54&lt;/a> Template Method&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=7248s" target="_blank" rel="noopener">2:00:48&lt;/a> Adapter&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=9584s" target="_blank" rel="noopener">2:39:44&lt;/a> Observer&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o1FZ_Bd4DSM&amp;amp;t=11280s" target="_blank" rel="noopener">3:08:00&lt;/a> Conclusion&lt;/li>
&lt;/ul></description></item></channel></rss>